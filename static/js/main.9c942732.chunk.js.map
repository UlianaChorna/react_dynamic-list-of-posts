{"version":3,"sources":["appContext.tsx","components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","utils/api.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["AppContext","React","createContext","users","setUsers","isDropdown","setIsDropdown","selectedUser","setSelectedUser","posts","setPosts","isLoader","setIsLoader","selectedPost","setSelectedPost","isError","setIsError","comments","setComments","AppProvider","_ref","children","useState","_jsx","Provider","value","PostsList","context","useContext","_jsxs","className","map","post","id","title","type","classNames","onClick","Loader","request","url","data","arguments","length","undefined","options","method","body","JSON","stringify","headers","delay","Promise","resolve","setTimeout","then","fetch","response","json","client","NewCommentForm","name","setName","hasNameError","setHasNameError","email","setEmail","hasEmailError","setHasEmailError","setBody","bodyErrorMessage","setBodyErrorMessage","isCommentError","setIsCommentError","onSubmit","event","preventDefault","trim","newComment","postId","comment","res","catch","finally","htmlFor","placeholder","onChange","target","_Fragment","PostDetails","isCommentLoader","setIsCommentLoader","isFormOpened","setIsFormOpened","isDeleteError","setIsDeleteError","useEffect","concat","removeComment","find","filter","deleteComment","href","UserSelector","user","handleSelected","role","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9c942732.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { Comment } from './types/Comment';\n\ninterface Props {\n  users: User[];\n  setUsers: (users: User[]) => void;\n  isDropdown: boolean;\n  comments: Comment[];\n  setComments: (comments: Comment[]) => void;\n  setIsDropdown: (q: boolean) => void;\n  selectedUser: User | null;\n  setSelectedUser: (q: User | null) => void;\n  selectedPost: Post | null;\n  setSelectedPost: (q: Post | null) => void;\n  posts: Post[];\n  setPosts: (q: Post[]) => void;\n  isLoader: boolean;\n  setIsLoader: (q: boolean) => void;\n  isError: boolean;\n  setIsError: (q: boolean) => void;\n}\n\nexport const AppContext = React.createContext<Props>({\n  users: [],\n  setUsers: () => {},\n  isDropdown: false,\n  setIsDropdown: () => {},\n  selectedUser: null,\n  setSelectedUser: () => {},\n  posts: [],\n  setPosts: () => {},\n  isLoader: false,\n  setIsLoader: () => {},\n  selectedPost: null,\n  setSelectedPost: () => {},\n  isError: false,\n  setIsError: () => {},\n  comments: [],\n  setComments: () => {},\n});\n\ninterface ProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AppProvider: React.FC<ProviderProps> = ({ children }) => {\n  const [isDropdown, setIsDropdown] = useState(false);\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [comments, setComments] = useState<Comment[]>([]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        users,\n        setUsers,\n        isDropdown,\n        setIsDropdown,\n        selectedUser,\n        setSelectedUser,\n        posts,\n        setPosts,\n        isLoader,\n        setIsLoader,\n        selectedPost,\n        setSelectedPost,\n        isError,\n        setIsError,\n        comments,\n        setComments,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { AppContext } from '../appContext';\n\nexport const PostsList: React.FC = () => {\n  const context = useContext(AppContext);\n\n  const { posts, setSelectedPost, selectedPost } = context;\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={classNames('button is-link', {\n                    'is-light': selectedPost?.id === post.id,\n                  })}\n                  onClick={() => setSelectedPost(post)}\n                >\n                  {selectedPost?.id === post.id ? 'Close' : 'Open'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import classNames from 'classnames';\nimport React, { useContext, useState } from 'react';\nimport { addComment } from '../utils/api';\nimport { AppContext } from '../appContext';\n\nexport const NewCommentForm: React.FC = () => {\n  const context = useContext(AppContext);\n  const {\n    selectedPost,\n    setIsLoader,\n    isLoader,\n    comments,\n    setComments,\n  } = context;\n\n  const [name, setName] = useState('');\n  const [hasNameError, setHasNameError] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [hasEmailError, setHasEmailError] = useState(false);\n\n  const [body, setBody] = useState('');\n  const [bodyErrorMessage, setBodyErrorMessage] = useState('');\n  const [isCommentError, setIsCommentError] = useState(false);\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setHasNameError(false);\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setHasEmailError(false);\n  };\n\n  const handleBodyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(event.target.value);\n    setBodyErrorMessage('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasNameError(!name.trim());\n    setHasEmailError(!email.trim());\n\n    if (!body) {\n      setBodyErrorMessage('Please enter some text');\n    } else if (body.length < 5) {\n      setBodyErrorMessage('Body should have at least 5 chars');\n    }\n\n    if (!name.trim() || !email.trim() || body.length < 5) {\n      return;\n    }\n\n    setHasNameError(false);\n    setIsLoader(true);\n    setHasEmailError(false);\n    setBodyErrorMessage('');\n\n    const newComment = {\n      postId: selectedPost ? selectedPost.id : 0,\n      name,\n      email,\n      body,\n    };\n\n    addComment(newComment)\n      .then((res) => {\n        setComments([...comments, res]);\n        setBody('');\n      })\n      .catch(() => setIsCommentError(true))\n      .finally(() => setIsLoader(false));\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n\n    setHasNameError(false);\n    setIsLoader(false);\n    setHasEmailError(false);\n    setBodyErrorMessage('');\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', {\n              'is-danger': hasNameError,\n            })}\n            onChange={handleNameChange}\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {hasNameError && (\n            <>\n              <span\n                className=\"icon is-small is-right has-text-danger\"\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n            </>\n          )}\n        </div>\n\n        {hasNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', {\n              'is-danger': hasEmailError,\n            })}\n            onChange={handleEmailChange}\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {hasEmailError && (\n            <>\n              <span\n                className=\"icon is-small is-right has-text-danger\"\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n            </>\n          )}\n        </div>\n\n        {hasEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', {\n              'is-danger': hasEmailError,\n            })}\n            onChange={handleBodyChange}\n          />\n        </div>\n\n        {bodyErrorMessage && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-link', {\n              'is-loading': isLoader,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={() => reset()}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n\n      {isCommentError && (\n        <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n          You can&apos;t add a comment.\n        </p>\n      )}\n\n    </form>\n  );\n};\n","import { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\nimport { client } from './fetchClient';\n\nexport function getUsers() {\n  return client.get<User[]>('/users');\n}\n\nexport function getPosts(id: number) {\n  return client.get<Post[]>(`/posts?userId=${id}`);\n}\n\nexport function getComment(postId: number) {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n}\n\nexport function addComment(comment: Omit<Comment, 'id'>) {\n  return client.post<Comment>('/comments', comment);\n}\n\nexport function deleteComment(id: number) {\n  return client.delete(`/comments/${id}`);\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { AppContext } from '../appContext';\nimport { getComment, deleteComment } from '../utils/api';\n\nexport const PostDetails: React.FC = () => {\n  const context = useContext(AppContext);\n\n  const { selectedPost, comments, setComments } = context;\n\n  const [isCommentLoader, setIsCommentLoader] = useState(false);\n  const [isCommentError, setIsCommentError] = useState(false);\n  const [isFormOpened, setIsFormOpened] = useState(false);\n  const [isDeleteError, setIsDeleteError] = useState(false);\n\n  useEffect(() => {\n    if (selectedPost) {\n      setIsCommentLoader(true);\n      setIsCommentError(false);\n\n      getComment(selectedPost.id)\n        .then(setComments)\n        .catch(() => setIsCommentError(true))\n        .finally(() => setIsCommentLoader(false));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedPost]);\n\n  const removeComment = (id: number) => {\n    const targetComment = comments.find(comment => comment.id === id);\n\n    if (targetComment) {\n      setIsDeleteError(false);\n      setComments(comments.filter(comment => comment.id !== id));\n    }\n\n    deleteComment(id)\n      .catch(() => setIsDeleteError(true));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {selectedPost?.title}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {selectedPost?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isCommentLoader && <Loader />}\n\n          {isCommentError && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n          {comments.length === 0 && !isCommentLoader && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {comments.length > 0 && !isCommentLoader && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments.map(comment => (\n                <article\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                  key={comment.id}\n                >\n                  <div className=\"message-header\">\n                    <a\n                      href={`mailto:${comment.email}`}\n                      data-cy=\"CommentAuthor\"\n                    >\n                      {comment.name}\n                    </a>\n\n                    {!isDeleteError && (\n                      <button\n                        data-cy=\"CommentDelete\"\n                        type=\"button\"\n                        className=\"delete is-small\"\n                        aria-label=\"delete\"\n                        onClick={() => removeComment(comment.id)}\n                      >\n                        delete button\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!isFormOpened && !isCommentLoader && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsFormOpened(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isFormOpened && (\n          <NewCommentForm />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { AppContext } from '../appContext';\nimport { getPosts, getUsers } from '../utils/api';\nimport { User } from '../types/User';\n\nexport const UserSelector: React.FC = () => {\n  const context = useContext(AppContext);\n\n  const {\n    users,\n    setUsers,\n    isDropdown,\n    setIsDropdown,\n    selectedUser,\n    setSelectedUser,\n    setPosts,\n    setSelectedPost,\n    setIsError,\n    setIsLoader,\n  } = context;\n\n  useEffect(() => {\n    getUsers()\n      .then(user => setUsers(user));\n  }, [setUsers]);\n\n  const handleSelected = (user: User) => {\n    setSelectedPost(null);\n    setIsLoader(true);\n    setIsDropdown(false);\n    setSelectedUser(user);\n\n    getPosts(user.id)\n      .then(post => setPosts(post))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoader(false));\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className=\"dropdown is-active\"\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setIsDropdown(!isDropdown)}\n        >\n          <span>{selectedUser ? selectedUser.name : 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      {isDropdown && (\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {users.map(user => (\n              <a\n                key={user.id}\n                href={`#user-${user.id}`}\n                className={classNames('dropdown-item', {\n                  'is-active': selectedUser?.id === user.id,\n                })}\n                onClick={() => handleSelected(user)}\n              >\n                {user.name}\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { AppContext } from './appContext';\n\nexport const App: React.FC = () => {\n  const context = useContext(AppContext);\n\n  const {\n    selectedUser,\n    isLoader,\n    posts,\n    selectedPost,\n    isError,\n  } = context;\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                <p data-cy=\"NoSelectedUser\">\n                  {!selectedUser && 'No user selected'}\n\n                </p>\n                {isLoader && <Loader /> }\n\n                {isError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {selectedUser && posts.length === 0 && (\n                  <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n                    No post yet\n                  </div>\n                )}\n\n                {selectedUser && posts.length > 0 && <PostsList />}\n\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar', {\n                'Sidebar--open': selectedPost,\n              },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {selectedPost && <PostDetails />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { App } from './App';\nimport { AppProvider } from './appContext';\n\ncreateRoot(document.getElementById('root') as HTMLElement)\n  .render(\n    <AppProvider>\n      <App />\n    </AppProvider>,\n  );\n"],"sourceRoot":""}